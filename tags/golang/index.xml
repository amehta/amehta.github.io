<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on Tech Log</title>
    <link>https://amehta.github.io/tags/golang/</link>
    <description>Recent content in golang on Tech Log</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 11 Mar 2019 00:21:00 -0800</lastBuildDate>
    
	<atom:link href="https://amehta.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>WC implementation in Go Lang</title>
      <link>https://amehta.github.io/posts/2019/03/wc-implementation-in-go-lang/</link>
      <pubDate>Mon, 11 Mar 2019 00:21:00 -0800</pubDate>
      
      <guid>https://amehta.github.io/posts/2019/03/wc-implementation-in-go-lang/</guid>
      <description>Continuing the theme of exploring Go Lang, today I will be writing a simple version of the Unix utility wc that displays the number of lines, words, and bytes contained in each input file.
This exploration process will involve the following pieces
 Getting a file name from command line. os Opening the file for reading. os Reading the contents of the file. bufio Count the lines, words and bytes. unicode Display the results.</description>
    </item>
    
    <item>
      <title>Exploring filesystem in golang</title>
      <link>https://amehta.github.io/posts/2019/03/exploring-filesystem-in-golang/</link>
      <pubDate>Wed, 06 Mar 2019 00:12:00 -0800</pubDate>
      
      <guid>https://amehta.github.io/posts/2019/03/exploring-filesystem-in-golang/</guid>
      <description>I am currently dabbling in [GoLang] go-lang and trying to get familiar with it&amp;rsquo;s syntax and style of programming. I also want to get familiar with the built-in packages for basic tasks witout having to google for basic features.
In this post I will be working my way up to building a simple program that can list the files of a given path to it as a command line argument.</description>
    </item>
    
  </channel>
</rss>