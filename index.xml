<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech Log</title>
    <link>https://amehta.github.io/</link>
    <description>Recent content on Tech Log</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 10 Apr 2020 09:00:05 -0700</lastBuildDate>
    
	<atom:link href="https://amehta.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to enumerate nodes in Spritekit?</title>
      <link>https://amehta.github.io/tips/enumerate_spritekit_nodes/</link>
      <pubDate>Fri, 10 Apr 2020 09:00:05 -0700</pubDate>
      
      <guid>https://amehta.github.io/tips/enumerate_spritekit_nodes/</guid>
      <description>Last Run on XCODE 11.4 / Swift 5.2
Spritekit has a method enumerateChildNodes that searches the children of the receiving node to perform processing for nodes that share a name.
In the code snippet below, we are are iterating through all the nodes with the name &amp;ldquo;trafficCar&amp;rdquo; in the parent node (or SKScene) and performing some action on it.
func moveTraffic() { enumerateChildNodes(withName: &amp;#34;trafficCar&amp;#34;) { (trafficCar, stop) in let car = trafficCar as!</description>
    </item>
    
    <item>
      <title></title>
      <link>https://amehta.github.io/privacy/</link>
      <pubDate>Thu, 27 Feb 2020 10:01:08 -0800</pubDate>
      
      <guid>https://amehta.github.io/privacy/</guid>
      <description>Privacy Policy Apurva Mehta built the Space Jam app as an Ad Supported app. This SERVICE is provided by at no cost and is intended for use as is.
This page is used to inform visitors regarding my policies with the collection, use, and disclosure of Personal Information if anyone decided to use my Service.
If you choose to use my Service, then you agree to the collection and use of information in relation to this policy.</description>
    </item>
    
    <item>
      <title>Select Sections From Images of Newspaper clippings, receipts etc Using Opencv and Python</title>
      <link>https://amehta.github.io/posts/2019/09/select-sections-from-images-of-newspaper-clippings-receipts-etc-using-opencv-and-python/</link>
      <pubDate>Wed, 25 Sep 2019 13:53:05 -0500</pubDate>
      
      <guid>https://amehta.github.io/posts/2019/09/select-sections-from-images-of-newspaper-clippings-receipts-etc-using-opencv-and-python/</guid>
      <description>We often take pictures of menus, receipts, and message boards etc. They are often not aligned properly. In this post, I will show you how to select the pertinet parts and allign them as correctly as possible.
   Original Processed          Let&amp;rsquo;s get started.
1. Find the anchor points We will first load the image of a newspaper clipping containing the sudoku puzzle.</description>
    </item>
    
    <item>
      <title>Create and apply simple filters to an image using OpenCV and Python</title>
      <link>https://amehta.github.io/posts/2019/09/create-and-apply-simple-filters-to-an-image-using-opencv-and-python/</link>
      <pubDate>Mon, 16 Sep 2019 13:55:46 -0500</pubDate>
      
      <guid>https://amehta.github.io/posts/2019/09/create-and-apply-simple-filters-to-an-image-using-opencv-and-python/</guid>
      <description>In this blog post, I will show you how we can enhance our images using colored filters and add border backgrounds.
   Original Original w/ color filter Original w/ color border           Let&amp;rsquo;s get started.
1. Simple color filter Lets start with first creating a color filter - an image with just a single color. This is as simple as creating a 3-D array and filling each pixel with the same value.</description>
    </item>
    
    <item>
      <title>Adding text to an image using OpenCV and Python</title>
      <link>https://amehta.github.io/posts/2019/08/adding-text-to-an-image-using-opencv-and-python/</link>
      <pubDate>Thu, 22 Aug 2019 23:08:06 -0700</pubDate>
      
      <guid>https://amehta.github.io/posts/2019/08/adding-text-to-an-image-using-opencv-and-python/</guid>
      <description>In a series of upcoming blog posts, I will be using OpenCV to manipulate images. In this post, I will be adding text to an image (below), I took of a Dervish monastery at the beautiful village of Blagaj in Bosnia.
   Resized Original Resized Original w/ text          Lets get started.
 Read Image Resize Image by aspect ratio Add text to resized image Save resized image with text  1.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://amehta.github.io/about/</link>
      <pubDate>Thu, 01 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://amehta.github.io/about/</guid>
      <description>Iâ€™m just another earthling who likes traveling, programming, learning, writing, and making stuff.
Thatâ€™s all that I can think of right now. Hopefully Iâ€™ll add something more to this later on. ðŸ˜…
Curious about me? Use the social links above to check out my profiles.
This blog is powered by Hugo, the worldâ€™s fastest framework for building websites. It is written in Go.</description>
    </item>
    
    <item>
      <title>WC implementation in Go Lang</title>
      <link>https://amehta.github.io/posts/2019/03/wc-implementation-in-go-lang/</link>
      <pubDate>Mon, 11 Mar 2019 00:21:00 -0800</pubDate>
      
      <guid>https://amehta.github.io/posts/2019/03/wc-implementation-in-go-lang/</guid>
      <description>Continuing the theme of exploring Go Lang, today I will be writing a simple version of the Unix utility wc that displays the number of lines, words, and bytes contained in each input file.
This exploration process will involve the following pieces * Getting a file name from command line. os * Opening the file for reading. os * Reading the contents of the file. bufio * Count the lines, words and bytes.</description>
    </item>
    
    <item>
      <title>Exploring filesystem in golang</title>
      <link>https://amehta.github.io/posts/2019/03/exploring-filesystem-in-golang/</link>
      <pubDate>Wed, 06 Mar 2019 00:12:00 -0800</pubDate>
      
      <guid>https://amehta.github.io/posts/2019/03/exploring-filesystem-in-golang/</guid>
      <description>I am currently dabbling in GoLang and trying to get familiar with it&amp;rsquo;s syntax and style of programming. I also want to get familiar with the built-in packages for basic tasks witout having to google for basic features.
In this post I will be working my way up to building a simple program that can list the files of a given path to it as a command line argument.</description>
    </item>
    
    <item>
      <title>ls implementation in python3</title>
      <link>https://amehta.github.io/posts/2019/02/ls-implementation-in-python3/</link>
      <pubDate>Thu, 28 Feb 2019 00:08:00 -0800</pubDate>
      
      <guid>https://amehta.github.io/posts/2019/02/ls-implementation-in-python3/</guid>
      <description>&amp;ldquo;ls&amp;rdquo; is unix utility that lists the files and directories in the current path or a user passed path. In this post we will explore how to achive such a basic implementation if it using python. Lets explore the ls command line utility.
Some basic information First, we execute ls command line utility to get some preliminary information of a directory. Here is an example of the output from the ls command on a sample directory.</description>
    </item>
    
    <item>
      <title>Using Python&#39;s map() AND reduce()</title>
      <link>https://amehta.github.io/posts/2012/01/using-pythons-map-and-reduce/</link>
      <pubDate>Sun, 29 Jan 2012 00:08:00 -0800</pubDate>
      
      <guid>https://amehta.github.io/posts/2012/01/using-pythons-map-and-reduce/</guid>
      <description>Sum of the Squares of the first 5 numbers In this post I will try to use the map() and reduce() functions to compute the sum of the squares of the first five numbers. The map() function takes a function and an iterable as a parameter. The items of the iterable are fed to the function to create a new list. The reduce() function also takes a function and an iterable as a parameter.</description>
    </item>
    
  </channel>
</rss>