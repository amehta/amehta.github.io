<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming on Tech Log</title>
    <link>https://amehta.github.io/categories/programming/</link>
    <description>Recent content in programming on Tech Log</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 03 May 2020 22:18:51 -0700</lastBuildDate>
    
	<atom:link href="https://amehta.github.io/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>User Input in Swift commandline</title>
      <link>https://amehta.github.io/tips/user-input-in-swift-commandline/</link>
      <pubDate>Sun, 03 May 2020 22:18:51 -0700</pubDate>
      
      <guid>https://amehta.github.io/tips/user-input-in-swift-commandline/</guid>
      <description>Last Run on XCODE 11.4 / Swift 5.2
If you are writing a command line tool and need user input, the readLine() function can be used for it. It returns an optional
let input = readLine() And, if you dont want the ending new line character, you can set the strippingNewline parameter to true.
let input = readLine(strippingNewline: true)</description>
    </item>
    
    <item>
      <title>Checking if a Swift String contains a certain text</title>
      <link>https://amehta.github.io/tips/checking-if-swift-strings-contains-text/</link>
      <pubDate>Fri, 01 May 2020 12:11:26 -0700</pubDate>
      
      <guid>https://amehta.github.io/tips/checking-if-swift-strings-contains-text/</guid>
      <description>Last Run on XCODE 11.4 / Swift 5.2
A simple way to check if a string contains a certain text is to use the method contains available to Strings.
In the code snippet below, we will check if a string contains a certain text.
let fruit1 = &amp;#34;apple&amp;#34; let fruit2 = &amp;#34;banana&amp;#34; let mySentence = &amp;#34;An apple a day keeps the doctor away.&amp;#34; mySentence.contains(fruit1) // result --&amp;gt; True mySentence.contains(fruit2) // result --&amp;gt; False If we need to check the string against multiple options, we will have to use a variation of the contains method that takes a closure.</description>
    </item>
    
    <item>
      <title>Matching Swift Strings by Prefix or Suffix</title>
      <link>https://amehta.github.io/tips/matching-swift-strings-by-prefix-or-suffix/</link>
      <pubDate>Tue, 28 Apr 2020 21:56:43 -0700</pubDate>
      
      <guid>https://amehta.github.io/tips/matching-swift-strings-by-prefix-or-suffix/</guid>
      <description>Last Run on XCODE 11.4 / Swift 5.2
A simple way to check if a string starts or ends with a certain pattern is to use the method hasSuffix and hasPrefix available to Strings.
In the code snippet below, we will check if a string begins or ends with a specific text pattern.
let fileName1 = &amp;#34;InstagramCover.jpg&amp;#34; let fileName2 = &amp;#34;SnapchatCover.doc&amp;#34; fileName1.hasSuffix(&amp;#34;jpg&amp;#34;) // result --&amp;gt; True fileName2.hasSuffix(&amp;#34;jpg&amp;#34;) // result --&amp;gt; False fileName1.</description>
    </item>
    
    <item>
      <title>Access Swift String by Index</title>
      <link>https://amehta.github.io/tips/access-swift-string-by-index/</link>
      <pubDate>Tue, 21 Apr 2020 22:23:31 -0700</pubDate>
      
      <guid>https://amehta.github.io/tips/access-swift-string-by-index/</guid>
      <description>Last Run on XCODE 11.4 / Swift 5.2
The swift string class does not provide the ability to get a character at a specific index because of its native support for UTF characters.
In the code snippets below, we will walk through code to access elements of a string at speific positions.
Getting the first Character let mySwiftString = &amp;#34;Swift is awesome!&amp;#34; //Getting the first Character mySwiftString.first let firstIndex = mySwiftString.</description>
    </item>
    
    <item>
      <title>How to enumerate nodes in Spritekit?</title>
      <link>https://amehta.github.io/tips/enumerate_spritekit_nodes/</link>
      <pubDate>Fri, 10 Apr 2020 09:00:05 -0700</pubDate>
      
      <guid>https://amehta.github.io/tips/enumerate_spritekit_nodes/</guid>
      <description>Last Run on XCODE 11.4 / Swift 5.2
Spritekit has a method enumerateChildNodes that searches the children of the receiving node to perform processing for nodes that share a name.
In the code snippet below, we are are iterating through all the nodes with the name &amp;ldquo;trafficCar&amp;rdquo; in the parent node (or SKScene) and performing some action on it.
func moveTraffic() { enumerateChildNodes(withName: &amp;#34;trafficCar&amp;#34;) { (trafficCar, stop) in let car = trafficCar as!</description>
    </item>
    
    <item>
      <title>Select Sections From Images of Newspaper clippings, receipts etc Using Opencv and Python</title>
      <link>https://amehta.github.io/posts/2019/09/select-sections-from-images-of-newspaper-clippings-receipts-etc-using-opencv-and-python/</link>
      <pubDate>Wed, 25 Sep 2019 13:53:05 -0500</pubDate>
      
      <guid>https://amehta.github.io/posts/2019/09/select-sections-from-images-of-newspaper-clippings-receipts-etc-using-opencv-and-python/</guid>
      <description>We often take pictures of menus, receipts, and message boards etc. They are often not aligned properly. In this post, I will show you how to select the pertinet parts and allign them as correctly as possible.
   Original Processed          Let&amp;rsquo;s get started.
1. Find the anchor points We will first load the image of a newspaper clipping containing the sudoku puzzle.</description>
    </item>
    
    <item>
      <title>Create and apply simple filters to an image using OpenCV and Python</title>
      <link>https://amehta.github.io/posts/2019/09/create-and-apply-simple-filters-to-an-image-using-opencv-and-python/</link>
      <pubDate>Mon, 16 Sep 2019 13:55:46 -0500</pubDate>
      
      <guid>https://amehta.github.io/posts/2019/09/create-and-apply-simple-filters-to-an-image-using-opencv-and-python/</guid>
      <description>In this blog post, I will show you how we can enhance our images using colored filters and add border backgrounds.
   Original Original w/ color filter Original w/ color border           Let&amp;rsquo;s get started.
1. Simple color filter Lets start with first creating a color filter - an image with just a single color. This is as simple as creating a 3-D array and filling each pixel with the same value.</description>
    </item>
    
    <item>
      <title>Adding text to an image using OpenCV and Python</title>
      <link>https://amehta.github.io/posts/2019/08/adding-text-to-an-image-using-opencv-and-python/</link>
      <pubDate>Thu, 22 Aug 2019 23:08:06 -0700</pubDate>
      
      <guid>https://amehta.github.io/posts/2019/08/adding-text-to-an-image-using-opencv-and-python/</guid>
      <description>In a series of upcoming blog posts, I will be using OpenCV to manipulate images. In this post, I will be adding text to an image (below), I took of a Dervish monastery at the beautiful village of Blagaj in Bosnia.
   Resized Original Resized Original w/ text          Lets get started.
 Read Image Resize Image by aspect ratio Add text to resized image Save resized image with text  1.</description>
    </item>
    
    <item>
      <title>WC implementation in Go Lang</title>
      <link>https://amehta.github.io/posts/2019/03/wc-implementation-in-go-lang/</link>
      <pubDate>Mon, 11 Mar 2019 00:21:00 -0800</pubDate>
      
      <guid>https://amehta.github.io/posts/2019/03/wc-implementation-in-go-lang/</guid>
      <description>Continuing the theme of exploring Go Lang, today I will be writing a simple version of the Unix utility wc that displays the number of lines, words, and bytes contained in each input file.
This exploration process will involve the following pieces * Getting a file name from command line. os * Opening the file for reading. os * Reading the contents of the file. bufio * Count the lines, words and bytes.</description>
    </item>
    
    <item>
      <title>Exploring filesystem in golang</title>
      <link>https://amehta.github.io/posts/2019/03/exploring-filesystem-in-golang/</link>
      <pubDate>Wed, 06 Mar 2019 00:12:00 -0800</pubDate>
      
      <guid>https://amehta.github.io/posts/2019/03/exploring-filesystem-in-golang/</guid>
      <description>I am currently dabbling in GoLang and trying to get familiar with it&amp;rsquo;s syntax and style of programming. I also want to get familiar with the built-in packages for basic tasks witout having to google for basic features.
In this post I will be working my way up to building a simple program that can list the files of a given path to it as a command line argument.</description>
    </item>
    
  </channel>
</rss>